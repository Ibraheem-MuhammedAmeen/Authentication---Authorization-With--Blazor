@page "/login"
@using Microsoft.Extensions.Logging
@rendermode InteractiveServer

<div class="row">
    <div class="col-sm-4">
        <h2>Login</h2>
        <EditForm Model="@Login" OnValidSubmit="LoginClicked">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label class="form-label">Email Address</label>
                <InputText @bind-Value="Login.Email" class="form-control"></InputText>
            </div>
            <div class="form-group mt-3">
                <label class="form-label">Password</label>
                <InputText @bind-Value="Login.Password" class="form-control" type="password"></InputText>
            </div>
            <div class="form-group mt-3">
                <button class="btn btn-primary" type="submit">Login</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    public LoginDTO Login { get; set; } = new LoginDTO();

    private async Task LoginClicked()
    {
        try
        {
            LoginResponse response = await accountService.LoginAsync(Login);
            if (!response.Flag)
            {
                await js.InvokeVoidAsync("alert", response.Message);
                return;
            }

            var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
            customAuthStateProvider.UpdateAuthenticationState(response.JWTToken);
            NavManager.NavigateTo("/", forceLoad: true);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
            throw; // Optional: rethrow the exception for debugging purposes
        }
    }
}
